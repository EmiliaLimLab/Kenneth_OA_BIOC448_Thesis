shelf_mean <- mean(shelf_df$estimate)
shelf_lower <- shelf_ttest$conf.int[1]
shelf_upper <- shelf_ttest$conf.int[2]
df_relation_no2 <- data.frame(label = c("All probes","Open Sea", "Island",
"Shore","Shelf"),
mean = c(allprobes_mean,opensea_mean,island_mean,
shore_mean,shelf_mean),
lower = c(allprobes_lower,opensea_lower,island_lower,
shore_lower,shelf_lower),
upper = c(allprobes_upper,opensea_upper,island_upper,
shore_upper,shelf_upper),
pollutant = "NO[2]")
## reverses the factor level ordering for labels
df_relation_no2$label <- factor(df_relation_no2$label,
levels=rev(df_relation_no2$label))
forest_plot_no2 <- ggplot(data=df_relation_no2, aes(x=label, y= mean,
ymin = lower,
ymax = upper)) +
geom_pointrange(aes(color = as.factor(label))) +
scale_color_manual(values = rep(c("#6A0DAD",
"#28A745",
"#1E90FF",
"#FF69B4",
"red"))) +
geom_hline(yintercept=0, lty =2) +
coord_flip() +
ggtitle(expression("24 h NO"[2]*" Exposure")) +
ylab(expression(paste(Delta,beta, " per ", mu, "g/m"^3))) +
xlab("Region") #+
scale_y_continuous(limits = c(-4.0e-5,4.0e-5)) +
theme(legend.position = "none")
forest_plot_no2 <- ggplot(data=df_relation_no2, aes(x=label, y= mean,
ymin = lower,
ymax = upper)) +
geom_pointrange(aes(color = as.factor(label))) +
scale_color_manual(values = rep(c("#6A0DAD",
"#28A745",
"#1E90FF",
"#FF69B4",
"red"))) +
geom_hline(yintercept=0, lty =2) +
coord_flip() +
ggtitle(expression("24 h NO"[2]*" Exposure")) +
ylab(expression(paste(Delta,beta, " per ", mu, "g/m"^3))) +
xlab("Region") +
scale_y_continuous(limits = c(-4.0e-5,4.0e-5)) +
theme(legend.position = "none")
forest_plot_nop2
forest_plot_no2
## O3
## 24 hour O3 Expsore Pathway Ananlysis
## Multipollutant Methylation Patterns
## https://stackoverflow.com/questions/38062650/forest-plot-for-a-beginner-simple-example-using-ggplot2-edited
mutate(df_o3,
estimate = estimate/48*24.45,
std.error = std.error/48*24.45)
allprobes_ttest <- t.test(df_o3$estimate, mu = 0)
allprobes_mean <- mean(df_o3$estimate)
allprobes_lower <- allprobes_ttest$conf.int[1]
allprobes_upper <- allprobes_ttest$conf.int[2]
opensea_df <- df_o3[df_o3$Relation_to_Island == "OpenSea",]
opensea_ttest <- t.test(opensea_df$estimate, mu = 0)
opensea_mean <- mean(opensea_df$estimate)
opensea_lower <- opensea_ttest$conf.int[1]
opensea_upper <- opensea_ttest$conf.int[2]
island_df <- df_o3[df_o3$Relation_to_Island == "Island",]
island_ttest <- t.test(island_df$estimate, mu = 0)
island_mean <- mean(island_df$estimate)
island_lower <- island_ttest$conf.int[1]
island_upper <- island_ttest$conf.int[2]
shore_df <- df_o3[df_o3$Relation_to_Island == "N_Shore" |
df_o3$Relation_to_Island == "S_Shore" ,]
shore_ttest <- t.test(shore_df$estimate, mu = 0)
shore_mean <- mean(shore_df$estimate)
shore_lower <- shore_ttest$conf.int[1]
shore_upper <- shore_ttest$conf.int[2]
shelf_df <- df_o3[df_o3$Relation_to_Island == "N_Shelf" |
df_o3$Relation_to_Island == "S_Shelf" ,]
shelf_ttest <- t.test(shelf_df$estimate, mu = 0)
shelf_mean <- mean(shelf_df$estimate)
shelf_lower <- shelf_ttest$conf.int[1]
shelf_upper <- shelf_ttest$conf.int[2]
df_relation_o3 <- data.frame(label = c("All probes","Open Sea", "Island",
"Shore","Shelf"),
mean = c(allprobes_mean,opensea_mean,island_mean,
shore_mean,shelf_mean),
lower = c(allprobes_lower,opensea_lower,island_lower,
shore_lower,shelf_lower),
upper = c(allprobes_upper,opensea_upper,island_upper,
shore_upper,shelf_upper),
pollutant = "O[3]")
## reverses the factor level ordering for labels
df_relation_o3$label <- factor(df_relation_o3$label,
levels=rev(df_relation_o3$label))
forest_plot_o3 <- ggplot(data=df_relation_o3, aes(x=label, y= mean,
ymin = lower,
ymax = upper)) +
geom_pointrange(aes(color = as.factor(label))) +
scale_color_manual(values = rep(c("#6A0DAD",
"#28A745",
"#1E90FF",
"#FF69B4",
"red"))) +
geom_hline(yintercept=0, lty =2) +
coord_flip() +
ggtitle(expression("24 h O"[3]*" Exposure")) +
ylab(expression(paste(Delta,beta, " per ", mu, "g/m"^3))) +
xlab("Region") +
scale_y_continuous(limits = c(-5.3e-5,5.3e-5)) +
theme(legend.position = "none")
forest_plot_o3
forest_plot_o3 <- ggplot(data=df_relation_o3, aes(x=label, y= mean,
ymin = lower,
ymax = upper)) +
geom_pointrange(aes(color = as.factor(label))) +
scale_color_manual(values = rep(c("#6A0DAD",
"#28A745",
"#1E90FF",
"#FF69B4",
"red"))) +
geom_hline(yintercept=0, lty =2) +
coord_flip() +
ggtitle(expression("24 h O"[3]*" Exposure")) +
ylab(expression(paste(Delta,beta, " per ", mu, "g/m"^3))) +
xlab("Region") +
#scale_y_continuous(limits = c(-5.3e-5,5.3e-5)) +
theme(legend.position = "none")
forest_plot_o3
forest_plot_o3 <- ggplot(data=df_relation_o3, aes(x=label, y= mean,
ymin = lower,
ymax = upper)) +
geom_pointrange(aes(color = as.factor(label))) +
scale_color_manual(values = rep(c("#6A0DAD",
"#28A745",
"#1E90FF",
"#FF69B4",
"red"))) +
geom_hline(yintercept=0, lty =2) +
coord_flip() +
ggtitle(expression("24 h O"[3]*" Exposure")) +
ylab(expression(paste(Delta,beta, " per ", mu, "g/m"^3))) +
xlab("Region") +
scale_y_continuous(limits = c(-7.5e-5,7.5e-5)) +
theme(legend.position = "none")
forest_plot_o3
## SO2
## 24 hour SO2 Expsore Pathway Ananlysis
## Multipollutant Methylation Patterns
## https://stackoverflow.com/questions/38062650/forest-plot-for-a-beginner-simple-example-using-ggplot2-edited
## We need to change estimate and statistics of SO2 from ppm to ug/m^3
mutate(df_so2,
estimate = estimate/64.066*24.45,
std.error = std.error/64.066*24.45)
allprobes_ttest <- t.test(df_so2$estimate, mu = 0)
allprobes_mean <- mean(df_so2$estimate)
allprobes_lower <- allprobes_ttest$conf.int[1]
allprobes_upper <- allprobes_ttest$conf.int[2]
opensea_df <- df_so2[df_so2$Relation_to_Island == "OpenSea",]
opensea_ttest <- t.test(opensea_df$estimate, mu = 0)
opensea_mean <- mean(opensea_df$estimate)
opensea_lower <- opensea_ttest$conf.int[1]
opensea_upper <- opensea_ttest$conf.int[2]
island_df <- df_so2[df_so2$Relation_to_Island == "Island",]
island_ttest <- t.test(island_df$estimate, mu = 0)
island_mean <- mean(island_df$estimate)
island_lower <- island_ttest$conf.int[1]
island_upper <- island_ttest$conf.int[2]
shore_df <- df_so2[df_so2$Relation_to_Island == "N_Shore" |
df_so2$Relation_to_Island == "S_Shore" ,]
shore_ttest <- t.test(shore_df$estimate, mu = 0)
shore_mean <- mean(shore_df$estimate)
shore_lower <- shore_ttest$conf.int[1]
shore_upper <- shore_ttest$conf.int[2]
shelf_df <- df_so2[df_so2$Relation_to_Island == "N_Shelf" |
df_so2$Relation_to_Island == "S_Shelf" ,]
shelf_ttest <- t.test(shelf_df$estimate, mu = 0)
shelf_mean <- mean(shelf_df$estimate)
shelf_lower <- shelf_ttest$conf.int[1]
shelf_upper <- shelf_ttest$conf.int[2]
df_relation_so2 <- data.frame(label = c("All probes","Open Sea", "Island",
"Shore","Shelf"),
mean = c(allprobes_mean,opensea_mean,island_mean,
shore_mean,shelf_mean),
lower = c(allprobes_lower,opensea_lower,island_lower,
shore_lower,shelf_lower),
upper = c(allprobes_upper,opensea_upper,island_upper,
shore_upper,shelf_upper),
pollutant = "SO[2]")
## reverses the factor level ordering for labels
df_relation_so2$label <- factor(df_relation_so2$label,
levels=rev(df_relation_so2$label))
forest_plot_so2 <- ggplot(data=df_relation_so2, aes(x=label, y= mean,
ymin = lower,
ymax = upper)) +
geom_pointrange(aes(color = as.factor(label))) +
scale_color_manual(values = rep(c("#6A0DAD",
"#28A745",
"#1E90FF",
"#FF69B4",
"red"))) +
geom_hline(yintercept=0, lty =2) +
coord_flip() +
ggtitle(expression("24 h SO"[2]*" Exposure")) +
ylab(expression(paste(Delta,beta, " per ", mu, "g/m"^3))) +
xlab("Region") +
scale_y_continuous(limits = c(-0.015,0.015)) +
theme(legend.position = "none")
## Arrange forest plots into a single figure
merged_forest_CGI_plots <- ggarrange(forest_plot_exp,
forest_plot_no2,
forest_plot_o3,
forest_plot_so2,
forest_plot_mp,
labels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
heights = c(0.7))
merged_forest_CGI_plots
## for thesis
ggsave("thesis_forest_CGI_region_plots",
plot = merged_forest_CGI_plots,
device = "jpeg",
path = NULL,
scale = 1,
width = 7.5,
height = 8.5,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = FALSE,)
## Multi-pollutant
## https://bioconductor.org/packages/devel/bioc/vignettes/methylGSA/inst/doc/methylGSA-vignette.html#description-of-methylglm
## ---------------------------------------------------------------------------
## Multipollutant Pathway analysis
pa_df_mp <- df_mp[df_mp$p.value <= 0.0001]
rownames(pa_df_mp) <- pa_df_mp$probe_id
df_vector_mp <-  pa_df_mp$p.value
names(df_vector_mp) <- pa_df_mp$probe_id
res3 = methylglm(cpg.pval= df_vector_mp, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "KEGG") %>%
mutate(., pollutant = "Multi-pollutant")
res4 = methylglm(cpg.pval= df_vector_mp, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "GO") %>%
mutate(., pollutant = "Multi-pollutant")
barplot(res3, num = 8, colorby = "pvalue")
barplot(res4, num = 8, colorby = "pvalue")
## KEGG plot that has a gradient for colours
# mp_barplot_kegg <- ggplot(res3, aes(x=Description, y=Size, fill = padj)) +
#   geom_bar(stat = "identity") +
#   scale_fill_gradient(high = "#434475FF", low = "#89AB7CFF", na.value = NA)+
#   ggtitle("KEGG Gene Sets Associated with Multi-pollutant Exposure") +
#   xlab("") +
#   ylab("Size of the Gene Set") +
#   coord_flip()
mp_barplot_kegg <- ggplot(res3, aes(x=Description, y=Size, fill = padj < 0.05,
width = 0.85)) +
geom_bar(stat = "identity", width = 0.4) +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF")) +
# ggtitle("KEGG Gene Sets Associated with Multi-pollutant Exposure")+
xlab("") +
ylab("Size of Gene Set") +
coord_flip() +
theme(axis.text.y = element_text(size = 10),
title = element_text(size = 12))
mp_barplot_go <- res4[c(1:10),] %>%
ggplot(aes(x=Description, y=Size, fill = padj < 0.05,
width = 0.85)) +
geom_bar(stat = "identity", width = 0.4) +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF")) +
ggtitle("GO Gene Sets Associated with Multi-pollutant Exposure")+
xlab("")+
ylab("Size of Gene Set") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
title = element_text(size = 12))
##-----------------------------------------------------------------------------
## PM2.5
## 24 hour PM25 Exposure Pathway Analysis
pa_df_exp <- df_exp[df_exp$p.value <= 0.0001]
rownames(pa_df_exp) <- pa_df_exp$probe_id
df_vector_exp <-  pa_df_exp$p.value
names(df_vector_exp) <- pa_df_exp$probe_id
res5 = methylglm(cpg.pval= df_vector_exp, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "KEGG") %>%
mutate(., pollutant =  "PM[2.5]")
res6 = methylglm(cpg.pval= df_vector_exp, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "GO") %>%
mutate(., pollutant = "PM[2.5]")
barplot(res5, num = 8, colorby = "pvalue")
barplot(res6, num = 8, colorby = "pvalue")
exp_barplot_kegg <- ggplot(res5, aes(x=Description, y=Size,
fill = padj < 0.05, width = 0.85)) +
geom_bar(stat = "identity") +
## VanGogh1
## paletteer_d("MetBrewer::VanGogh1")
#scale_fill_gradient(high = "#434475FF", low = "#89AB7CFF", na.value = NA
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
# scale_fill_gradient(low = "blue", high = "red", na.value = NA) +
ggtitle(expression("KEGG Gene Sets Associated with PM"[2.5]* " Exposure")) +
xlab("")+
ylab("Size of the Gene Set") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
title = element_text(size = 12))
exp_barplot_go <- res6[c(1:10),] %>%
ggplot( aes(x=Description, y=Size, fill = padj < 0.05)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
ggtitle(expression("GO Gene Sets Associated with PM"[2.5]* " Exposure")) +
xlab("") +
ylab("Size of the Gene Set") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
title = element_text(size = 12))
##----------------------------------------------------------------------------
## NO2
## 24 hour no2 Exposure Pathway Analysis
pa_df_no2 <- df_no2[df_no2$p.value <= 0.0001]
rownames(pa_df_no2) <- pa_df_no2$probe_id
df_vector_no2 <-  pa_df_no2$p.value
names(df_vector_no2) <- pa_df_no2$probe_id
res9 = methylglm(cpg.pval= df_vector_no2, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "KEGG") %>%
mutate(., pollutant = "NO[2]")
res10 = methylglm(cpg.pval= df_vector_no2, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "GO") %>%
mutate(., pollutant = "NO[2]")
# barplot(res9, num = 8, colorby = "pvalue")
# barplot(re10, num = 8, colorby = "pvalue")
no2_barplot_kegg <- ggplot(res9, aes(x=Description, y=Size, fill = padj < 0.05,
width = 0.85)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
#Title and axis:
ggtitle(expression("KEGG Gene Set Associated with NO"[2]* " Exposure")) +
xlab("") +
ylab("Size of the Gene Set") +
coord_flip() +
theme(axis.text.y = element_text(size = 12))
no2_barplot_go <-
res10[c(1:10),] %>%
ggplot( aes(x=Description, y=Size, fill = padj < 0.05)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
ggtitle(expression("GO Gene Set Associated with NO"[2]* " Exposure")) +
ylab("Size of the Gene Set") +
xlab("") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
title = element_text(size = 12))
## -------------------------------------------------------------------------
## O3
## 24 hour O3 Exposure Pathway Analysis
pa_df_o3 <- df_o3[df_o3$p.value <= 0.0001]
rownames(pa_df_o3) <- pa_df_o3$probe_id
df_vector_o3 <-  pa_df_o3$p.value
names(df_vector_o3) <- pa_df_o3$probe_id
res7 = methylglm(cpg.pval= df_vector_o3, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "KEGG")%>%
mutate(., pollutant = "O[3]")
res8 = methylglm(cpg.pval= df_vector_o3, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "GO") %>%
mutate(., pollutant = "O[3]")
# barplot(res7, num = 8, colorby = "pvalue")
# barplot(res8, num = 8, colorby = "pvalue")
o3_barplot_kegg <- ggplot(res7, aes(x=Description, y=Size, fill = padj < 0.05,
width = 0.85)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
ggtitle(expression("KEGG Gene Set Associated with O"[3]* " Exposure")) +
ylab("Size of the Gene Set") +
xlab("") +
coord_flip() +
theme(axis.text.y = element_text(size = 12))
o3_barplot_go <-
res8[c(1:10),] %>%
ggplot( aes(x=Description, y=Size, fill = padj < 0.05)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
ggtitle(expression("GO Gene Set Associated with O"[3]* "Exposure")) +
ylab("Size of the Gene Set") +
xlab("") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
title = element_text(size = 12))
## -------------------------------------------------------------------------
## SO2
## 24 hour so2 Exposure Pathway Analysis
pa_df_so2 <- df_so2[df_so2$p.value <= 0.0001]
rownames(pa_df_so2) <- pa_df_so2$probe_id
df_vector_so2 <-  pa_df_so2$p.value
names(df_vector_so2) <- pa_df_so2$probe_id
res11 = methylglm(cpg.pval= df_vector_so2, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "KEGG") %>%
mutate(., pollutant = "SO[2]")
res12 = methylglm(cpg.pval= df_vector_so2, array.type = "EPIC", minsize = 200,
maxsize = 500, GS.type = "GO") %>%
mutate(., pollutant = "SO[2]")
# barplot(res11, num = 8, colorby = "pvalue")
# barplot(re12, num = 8, colorby = "pvalue")
so2_barplot_kegg <- ggplot(res11, aes(x=Description, y=Size, fill = padj < 0.05,
width = 0.85)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
ggtitle(expression("KEGG Gene Set Associated with SO"[2]* " Exposure")) +
ylab("Size of the Gene Set") +
xlab("") +
coord_flip() +
theme(axis.text.y = element_text(size = 12))
so2_barplot_go <-
res12[c(1:10),] %>%
ggplot( aes(x=Description, y=Size, fill = padj < 0.05)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("TRUE" = "#89AB7CFF", "FALSE" = "#434475FF" )) +
ggtitle(expression("GO Gene Set Associated with SO"[2]* " Exposure")) +
ylab("Size of the Gene Set") +
xlab("") +
coord_flip() +
theme(axis.text.y = element_text(size = 8),
title = element_text(size = 12))
## -------------------------------------------------------------------------
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go)
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go,
lavels = c("A", "B", "C", "D", "E"),
ncol - 1, nrow = 5,
heights = c(1))
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go,
lavels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
heights = c(1))
merged_go_barplots
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go,
lavels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
heights = c(1))
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go,
levels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
heights = c(1))
merged_go_barplots
exp_barplot_go
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go,
levels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
heights = c(1))
exp_barplot_go
merged_go_barplots
no2_barplot_go
o3_barplot_go
so2_barplot_go
mp_barplot_go
merged_go_barplots <- ggarrange(exp_barplot_go, no2_barplot_go,
o3_barplot_go, so2_barplot_go,
mp_barplot_go,
labels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
heights = c(1))
merged_go_barplots
## Save image to import into word
ggsave(
"thesis_merged_go_barplots",
plot = merged_go_barplots,
device = "jpeg",
path = NULL,
scale = 1,
width = 7.5,
height = 8.5,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = FALSE,
)
## Libraries used
library(BiocManager)
library(dplyr)
library(data.table)
library(tidyverse)
library(ggplot2)
library(pacman)
library(broom)
library(org.Hs.eg.db)
library(curl)
library(BiocVersion)
library(minfi)
library(qqman)
p_load(dplyr,doMC,IlluminaHumanMethylationEPICanno.ilm10b4.hg19,devtools,nloptr,lme4,lmerTest)
library(methylGSA)
library(paletteer)
library(ggrepel)
library(IlluminaHumanMethylationEPICanno.ilm10b4.hg19)
library(nloptr)
library(lme4)
library(lmerTest)
library(ggpubr)
library(ggmagnify)
packageVersion("methyGSA")
packageVersion("methylGSA")
packageVersion("doMC")
p_load(dplyr,doMC,IlluminaHumanMethylationEPICanno.ilm10b4.hg19,devtools,nloptr,lme4,lmerTest)
