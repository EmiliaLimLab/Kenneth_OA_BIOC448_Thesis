"0","### Total CpGs split into four groups, each glm is performed on each ind. CpG."
"0","subset_mp_glm <- function(pollutant, range1, range2){"
"0","  registerDoMC(25)"
"0","  check <- data.frame(name = NULL) "
"0","  write_csv(check,file=""check.csv"")"
"0","  foreach(i=colnames(epigenetic_table)[range1:range2],"
"0","          .combine=bind_rows) %dopar% {"
"0","            # i <- ""cg00000029"""
"0","            check <- bind_rows(check,tibble(name=i))"
"0","            write_csv(check,append=TRUE,file = ""check.csv"")"
"0","            probe_id <-  i"
"0","            subset_table <- epigenetic_table[,c(""V1"",..probe_id)]"
"0","            subset_clinical <- clinical_data_mp[clinical_data_mp[[pollutant]] > 0]"
"0","            single_df <- left_join(subset_table,"
"0","                                   subset_clinical,"
"0","                                   by=c(""V1""=""ADM_EPIGEN2_COM""))"
"0","            colnames(single_df)[2] <- ""beta_value"""
"0","            # model_value <- summary(model)"
"0","            glm_formula <- paste(""beta_value ~"", pollutant, ""+"
"0","                                             SEX_ASK_COM + ED_HSGR_COM +"
"0","                                             AGE_NMBR_COM +"
"0","                                             SDC_ETHN_OTSP01_COM + "
"0","                                             SDC_ETHN_OTSP02_COM +"
"0","                                             SMK_CURRCG_COM + "
"0","                                             ALC_FREQ_COM + HWT_DISW_COM + "
"0","                                             INC_TOT_COM"")"
"0","            model = try(glm(glm_formula,"
"0","                            data = single_df,"
"0","                            family = ""gaussian""))"
"0","            if(class(model)[1]==""try-error""){"
"0","              rr = NA"
"0","            }else{"
"0","              rr = data.frame(broom::tidy(model),"
"0","                              probe_id=probe_id) "
"0","            }"
"0","            rr"
"0","          }"
"0","}"
"0",""
"0","### Uses the combines the subsets into a single file for further analysis"
"0","pollutant_glm <- function(pollutant,s1_name,s2_name,s3_name,s4_name){"
"0","  write.csv(first_subset <- subset_mp_glm(pollutant,2,200000),"
"0","            s1_name)"
"0","  write.csv(second_subset <- subset_mp_glm(pollutant, 200001,400000),"
"0","            s2_name)"
"0","  write.csv(third_subset <- subset_mp_glm(pollutant, 400001,600000),"
"0","            s3_name)"
"0","  write.csv(fourth_subset <- subset_mp_glm(pollutant, 600001, 783137),"
"0","            s4_name)"
"0","            "
"0","  # rbind(first_subset, second_subset, third_subset, fourth_subset) %>%"
"0","  #   filter(term==pollutant)"
"0","} "
"0",""
"0","##---------------------------------------------------------------------------"
"0","### Annotate the cpg_data"
"0","anno_data_EPIC <- as.data.frame(getAnnotation(IlluminaHumanMethylationEPICanno.ilm10b4.hg19))"
"0",""
"0",""
"0","pvalue_and_annotate <- function(df){"
"0","  df <- left_join(df, anno_data_EPIC,"
"0","                  by=c(""probe_id"" = ""Name""))[,c(1:8,24,27,29)]"
"0","  df$chr <- as.integer(sub('...','',df$chr))"
"0","  df$pos <- as.integer(df$pos)"
"0","  "
"0","  # probe_list <- apply(epigenetic_table,2,"
"0","  #                    function(column) mean(column > 0.1) >= 0.25)"
"0","  # epigenetic_table_filtered <- epigenetic_table[,..probe_list]"
"0","  # df <- df[df$probe_id %in% colnames(epigenetic_table_filtered),]"
"0","  "
"0","  # df <- df[!(df$UCSC_RefGene_Group == """"),]"
"0","  df$adj_pvalue <-  p.adjust(df$p.value,method=""BH"")"
"0","  df"
"0","}"
"0",""
"0","##----------------------------------------------------------------------------"
"0","### Keep methylation sites if they pass the listed threshold after correction"
"0","significant_values <- function(df){"
"0","  filter(df, adj_pvalue < 0.5)"
"0","}"
"0","# test1 <-subset_mp_glm(""pm25_1yr_com"",2,2000)"
